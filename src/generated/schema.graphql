schema {
  query: Query
  mutation: Mutation
}

type Account {
  _count: AccountCount!
  avatarUrl: String
  connections: [OAuthConnection!]
  createdAt: DateTime!
  id: Int!
  roles: [AccountRole!]
  sessions: [AccountSession!]
  status: AccountStatus!
  updatedAt: DateTime!
}

type AccountCount {
  connections: Int!
  sessions: Int!
}

enum AccountRole {
  ADMIN
  USER
}

type AccountSession {
  account: Account!
  accountId: Int!
  createdAt: DateTime!
  expiresAt: DateTime!
  id: Int!
  ipAddr: String!
  updatedAt: DateTime!
  userAgent: String
}

enum AccountStatus {
  ACTIVE
  DELETED
  INACTIVE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GenerateEmailCodeResponse {
  expiresAt: DateTime!
  result: Boolean!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  echo(text: String!): String!
  generateEmailCode(email: String!): GenerateEmailCodeResponse!
  getAccessToken(code: String!): String!
  getCodeByAuth0(code: String!, redirectUri: String!): String!
  getCodeByUaepass(code: String!, redirectUri: String!): String!
  logout(sessionIds: [Float!]!): Boolean!
  updateAccount(input: UpdateAccountInput!): Account!
}

type OAuthCode {
  code: String!
  createdAt: DateTime!
  expiresAt: DateTime!
  id: Int!
  oAuthConnection: OAuthConnection!
  oAuthConnectionId: Int!
  updatedAt: DateTime!
}

type OAuthConnection {
  _count: OAuthConnectionCount!
  account: Account!
  accountId: Int!
  avatar: String
  createdAt: DateTime!
  email: String
  id: Int!
  name: String
  oAuthCodes: [OAuthCode!]
  provider: OAuthProvider!
  uid: String!
  updatedAt: DateTime!
}

type OAuthConnectionCount {
  oAuthCodes: Int!
}

enum OAuthProvider {
  AUTH0
  UAEPASS
}

type Query {
  currentSession: AccountSession!
  debug: JSON!
  echo(text: String!): String!
  generateUrlAuth0(redirectUri: String!): String!
  generateUrlUaepass(redirectUri: String!): String!
  whoami: Account!
}

input UpdateAccountInput {
  avatarUrl: String!
}